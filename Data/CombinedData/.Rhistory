a
a <- read.table("test1.txt", seqp = ",")
#In read.table("test1.txt") :'test1.txt'에서 readTableHeader에 의하여 발견된 완성되지 않은 마지막 라인입니다
# => 맨 마지막 빈 줄 1줄 있어야함
a
a <- read.table("test.txt", seqp = ",")
#In read.table("test1.txt") :'test1.txt'에서 readTableHeader에 의하여 발견된 완성되지 않은 마지막 라인입니다
# => 맨 마지막 빈 줄 1줄 있어야함
a
a <- read.table("test.txt", sep = ",")
#In read.table("test1.txt") :'test1.txt'에서 readTableHeader에 의하여 발견된 완성되지 않은 마지막 라인입니다
# => 맨 마지막 빈 줄 1줄 있어야함
a
#In read.table("test1.txt") :'test1.txt'에서 readTableHeader에 의하여 발견된 완성되지 않은 마지막 라인입니다
# => 맨 마지막 빈 줄 1줄 있어야함
a <- read.table("test1.txt", encoding = 'UTF-8')
a
a <- read.table("test1.txt", encoding = 'UTF-8')
a
#In read.table("test1.txt") :'test1.txt'에서 readTableHeader에 의하여 발견된 완성되지 않은 마지막 라인입니다
# => 맨 마지막 빈 줄 1줄 있어야함
a <- read.table("test1.txt", encoding = 'UTF-8', sep = ",")
a
#In read.table("test1.txt") :'test1.txt'에서 readTableHeader에 의하여 발견된 완성되지 않은 마지막 라인입니다
# => 맨 마지막 빈 줄 1줄 있어야함
a <- read.table("test1.txt", encoding = 'UTF-8')
a
#In read.table("test1.txt") :'test1.txt'에서 readTableHeader에 의하여 발견된 완성되지 않은 마지막 라인입니다
# => 맨 마지막 빈 줄 1줄 있어야함
a <- read.table("test1.txt", encoding = 'UTF-8')
a
#In read.table("test1.txt") :'test1.txt'에서 readTableHeader에 의하여 발견된 완성되지 않은 마지막 라인입니다
# => 맨 마지막 빈 줄 1줄 있어야함
a <- read.table("test1.txt", encoding = 'UTF-8')
textfile <- read.table("test.txt")
textfile
textfile <- read.table("test.txt", sep = "m")
textfile <- read.table("test.txt", sep = ",")
textfile
textfile <- readLines("test.txt")
textfile
reportcard <-  data.frame(group = c(1,1,2,2), english = c(90,80,60,70), math = c(50,60,100,20))
reportcard
write.table(reportcard, "testcard.txt", sep = ",", na = "NA", row.names = T, quote = F)
textfile <- read.table("testcard.txt", sep = ",")
textfile
x <- c(1:10)
y <- mean(x)
y
cat("mean : ", y, "\n", file = "result.txt")
textfile <- readLines("result.txt")
textfile
?cat
install.packages("readxl")
library(readxl)
execlgrade <- read_excel("grade.xlsx")
execlgrade
mean(excelgrade$science)
mean(execlgrade$science)
execlgradenocolum <- read_excel("grade_nocolumn.xlsx", col_names = F)
execlgradenocolum
excelsheetgrade <- read_excel("grade.xlsx", sheet =2)
excelsheetgrade
install.packages("xlsx")
library(xlsx)
reportcard <- data.frame(group = c(1,1,2,2), english = c(90,80,60,70), math = c(50,60,100,20))
reportcard
write.xlsx(reportcard, file = "test.xlsx")
xlsxgrade <- read_excel("text.xlsx")
xlsxgrade <- read_excel("test.xlsx")
xlsxgrade
no <- read_excel("grade_nocolumn.xlsx")
no
no.colnames()
colnames(no)
no <- read_excel("grade_nocolumn.xlsx", col_names = F)
no
no <- read_excel("grade_nocolumn.xlsx", col_names = T)
no
csvgrade <- read.csv("grade_csv.csv")
csvgrade
mean(csvgrade$english)
reportcard <- - data.frame(group = c(1,1,2,2), english = c(90,80,60,70), math = c(50,60,100,20))
reportcard
reportcard <- data.frame(group = c(1,1,2,2), english = c(90,80,60,70), math = c(50,60,100,20))
reportcard
write.csv(reportcard)
write.csv(reportcard, file = "textcsv.csv")
csvgrade <- read.csv("textcsv.csv")
csvgrade
csvgrade <- read.csv("grade_csv.csv")
head(csvgrade)
head(csvgrade, 10)
tail(csvgrade)
source('~/Denver/R/practice_0614_mean.R', echo=TRUE)
source('~/Denver/R/practice_0614_mean.R', echo=TRUE)
eng <- c(60, 10, 70, 100)
math <- c(15, 70, 40, 80)
df <- data.frame(eng, math)
df$grup <- c(1,1,2,2)
df$mean <- apply(df[,1:2], 1, mean)
df
mean_g <- aggregate(.~grup, df[, 1:2], mean)
mean_g
eng <- c(60, 10, 70, 100)
math <- c(15, 70, 40, 80)
df <- data.frame(eng, math)
df$grup <- c(1,1,2,2)
mean_g <- aggregate(.~grup, df[, 1:2], mean)
mean_g
eng <- c(60, 10, 70, 100)
math <- c(15, 70, 40, 80)
df <- data.frame(eng, math)
df$grup <- c(1,1,2,2)
df$mean <- apply(df[,1:2], 1, mean)
df
mean_g <- aggregate(.~grup, df[, 1:2], mean)
mean_g
eng <- c(60, 10, 70, 100)
math <- c(15, 70, 40, 80)
df <- data.frame(eng, math)
df$grup <- c(1,1,2,2)
mean_g <- aggregate(.~grup, df[, 1:2], mean)
df$grup <- c(1,1,2,2)
mean_g <- aggregate(.~grup, df[, 1:2], mean)
df[, 1:2]
df
mean_g <- aggregate(.~grup, df[, 1:2], mean)
mean_g <- aggregate(.~grup, df[ , 1:2], mean)
?aggregate
mean_grup <- aggregate(x = df[, 1:2], by = grup, mean)
mean_grup <- aggregate(x = df[, 1:2], by = .~grup, mean)
mean_grup <- aggregate(x = df[, 1:2], by = df$grup, mean)
mean_grup <- aggregate(x = df[, 1:2], by = as.list(df$grup), mean)
.~grup
print(.~grup)
length(as.list(df$grup))
length(df[, 1:2])
df[, 1:2]
df[1:2, ]
grup~.
print(grup~.)
print(grup~)
print(grup.~)
print(grup~.)
mean_g <- aggregate(grup~., df[ , 1:2], mean)
mean_g <- aggregate(.~grup~., df[ , 1:2], mean)
mean_g <- aggregate(.~grup, df[ , 1:2], mean)
eng <- c(60, 10, 70, 100)
math <- c(15, 70, 40, 80)
df <- data.frame(eng, math)
df$grup <- c(1,1,2,2)
df$mean <- apply(df[,1:2], 1, mean)
df
mean_g <- aggregate(.~grup, df[ , 1:2], mean)
mean_g
mean_g <- aggregate(grup, df[ , 1:2], mean)
attach(df)
mean_g <- aggregate(.~grup, df[ , 1:2], mean)
mean_g <- aggregate(.~grup, data = df[ , 1:2], mean)
mean_g <- aggregate(.~grup, data = df, mean)
mean_g <- aggregate(.~grup, data = df[ , 1:2], FUN =  mean)
mean_g <- aggregate(.~grup, data = df[ , 1:2], FUN =mean)
mean_g <- aggregate(.~grup, data = df[ , 1:2], FUN = mean)
eng <- c(60, 10, 70, 100)
math <- c(15, 70, 40, 80)
df <- data.frame(eng, math)
df$grup <- c(1,1,2,2)
attach(df)
mean_g <- aggregate(.~grup, data = df[ , 1:2], FUN = mean)
eng <- c(60, 10, 70, 100)
math <- c(15, 70, 40, 80)
df <- data.frame(eng, math)
df$grup <- c(1,1,2,2)
mean_g <- aggregate(.~grup, data = df[ , 1:2], FUN = mean)
df
rm(mean)
eng <- c(60, 10, 70, 100)
math <- c(15, 70, 40, 80)
df <- data.frame(eng, math)
df$grup <- c(1,1,2,2)
attach(df)
mean_g <- aggregate(.~grup, data = df[ , 1:2], FUN = mean)
df$means <- apply(df[,1:2], 1, mean)
df
eng <- c(60, 10, 70, 100)
math <- c(15, 70, 40, 80)
df <- data.frame(eng, math)
df$grup <- c(1,1,2,2)
mean_g <- aggregate(.~grup, df[ , 1:2], mean)
eng <- c(60, 10, 70, 100)
math <- c(15, 70, 40, 80)
df <- data.frame(eng, math)
df$grup <- c(1,1,2,2)
df$mean <- apply(df[,1:2], 1, mean)
df
write.table(df,  "testcard1.txt")
a <- read.table("testcard1.txt")
mean_g <- aggregate(.~grup, df[, 1:2], mean)
mean_g
eng <- c(60, 10, 70, 100)
math <- c(15, 70, 40, 80)
eng <- c(60, 10, 70, 100)
math <- c(15, 70, 40, 80)
grup <- c(1,1,2,2)
df <- data.frame(eng, math, grup)
mean_g <- aggregate(.~grup, df[, 1:2], mean)
mean_g <- aggregate(.~grup, df[, 1:2], "mean")
mean_g
df$mean <- apply(df[,1:2], 1, mean)
df
mean_g <- aggregate(.~grup, df[, 1:2], "mean")
mean_g
eng <- c(60, 10, 70, 100)
math <- c(15, 70, 40, 80)
grup <- c(1,1,2,2)
df <- data.frame(eng, math, grup)
df$mean <- apply(df[,1:2], 1, mean)
df
eng <- c(60, 10, 70, 100)
math <- c(15, 70, 40, 80)
grup <- c(1,1,2,2)
df <- data.frame(eng, math, grup)
mean_g <- aggregate(.~grup, df[, 1:2], "mean")
mean_g
library("dplyr")
1:5 %>% sum(.)
sum(length(1:5))
5 %>% sum(1:.)
5 %>% {sum(1:.)}
1:5 %>% sum(length(.))
length(5)
length91
length(1)
1:5 %>% length(.)
1:5  %>% sum(length(.))
1:3 %>% sum(length(.))
length(1:3)
csvgrade <- read.csv("grade_csv.csv")
head(csvgrade)
summary(csvgrade)
csvgrade %>% head() %>% summary
summary(head(csvgrade))
csvgrade %>% filter(class == 1) %>% summary
csvgrade %>% filter(class == 1) %>% summary()
csvgrade %>% subset(1:nrow(.) %>% 2 == 0)
csvgrade %>% subset(1:nrow(.) %% 2 == 0)
csvgrade %>% filter(class == 1)
csvgrade %>% filter(class != 1)
csvgrade %>% filter(math > 50)
csvgrade %>% filter(class == 1 & math > 50)
csvgrade %>% filter(class == 1 | math > 50)
csvgrade %>% filter(class == 1 | class ==3)
csvgrade %>% filter(class %in% c(1,3))
class1 <- csvgrade %>% filter(class ==1)
mean(class1$math)
mean(class1$english)
mean(class1$science)
csvgrade %>% select(math)
csvgrade %>% select(math, class)
csvgrade %>% select(-math)
csvgrade %>% filter(class == 1) %>% select(english)
csvgrade %>% select(id, math) %>% head(3)
csvgrade %>% head(3) %>% select(id, math)
csvgrade %>% arrange(math)
csvgrade %>% arrange(desc(math))
csvgrade %>% arrange(math, class)
csvgrade %>% mutate(total = math + english + science) %>% head(3)
csvgrade %>% filter(class == 1)  %>% mean(math, english, science)
csvgrade %>% filter(class == 1)  %>% mean(class$math, class$english, class$science)
csvgrade %>% mean(class$math, class$english, class$science)
csvgrade %>% mean(class$math)
mean(class$math)
mean(csvgrade$math)
csvgrade %>% filter(class == 1)  %>% mean(csvgrade$math)
csvgrade %>% filter(class == 1) %>% mean(csvgrade$math)
csvgrade %>% mean(csvgrade$math) %>% filter(class == 1)
csvgrade %>% mean(csvgrade$math)
mean(csvgrade$math)
mean(csvgrade$math, csvgrade$english, csvgrade$science)
mean(csvgrade$math)
csvgrade %>% filter(class == 1) %>% mean(math)
csvgrade %>% filter(class == 1)
csvgrade %>% filter(class == 1) %>% mean(math)
csvgrade %>% filter(class == 1) %>% mean(.$math)
csvgrade %>% filter(class == 1) %>% mean(csvgrade$math)
csvgrade %>% filter(class == 1) %>% summarise(mean_math = mean(math))
csvgrade %>% filter(class == 1) %>% summarise(mean_math = mean(math), mean_eng = mean(english))
csvgrade %>% filter(class == 1) %>% summarise(mean_math = mean(math), mean_eng = mean(english), mean_science = mean(science))
/.,mnb v
head(data)
setwd("C:\\Users\\TJ\\Documents\\Denver\\GitHub\\TheZoen\\Data\\CombinedData")
data <- read_excel("combine_seoul.xlsx")
head(data)
library(xlsx)
setwd("C:\\Users\\TJ\\Documents\\Denver\\GitHub\\TheZoen\\Data\\CombinedData")
data <- read_excel("combine_seoul.xlsx")
head(data)
View(data)
data <- data[, c(3,4,10:15)]
head(data)
fit <- lm(total.snow ~ total.temp)
attach(data)
fit <- lm(total.snow ~ total.temp)
plot(fit)
pairs.panels(data)
library(car)
library(psych)
pairs.panels(data)
plot(total.snow ~ total.temp)
plot(date ~ total.snow)
plot(Date ~ total.snow)
plot(total.snow ~Date)
plot(total.snow ~cause)
plot(total.snow ~Cause)
data <- read_excel("combine_seoul.xlsx", Encoding("utf-8"))
head(data)
View(data)
data <- data[, c(3,4,10:15)]
data <- read_excel("combine_seoul.xlsx", Encoding("utf-8"))
#head(data)
#View(data)
data <- data[, c(3,4,10:15)]
attach(data)
#fit <- lm(total.snow ~ total.temp, data=data)
#plot(fit)
#library(car)
#library(psych)
#pairs.panels(data)
#plot(total.snow ~ total.temp)
plot(total.snow ~Cause)
data <- read_excel("combine_seoul.xlsx", Encoding("cp949"))
#head(data)
#View(data)
data <- data[, c(3,4,10:15)]
attach(data)
#fit <- lm(total.snow ~ total.temp, data=data)
#plot(fit)
#library(car)
#library(psych)
#pairs.panels(data)
#plot(total.snow ~ total.temp)
plot(total.snow ~Cause)
data <- read_excel("combine_seoul.xlsx")
#head(data)
#View(data)
data <- data[, c(3,4,10:15)]
head(data)
ifelse(Cuase == "탈진탈수", "H"
))))))))
data <- transform(data$Cause, causes = ifelse(Cause == "개인질환", "A",
ifelse(Cuase == "낙석낙빙", "C",
ifelse(Cuase == "암벽등반", "E"
ifelse(Cuase == "저체온증", "G"
ifelse(Cuase == "탈진탈수", "H"
))))))))
data <- transform(data$Cause, causes = ifelse(Cause == "개인질환", "A",
ifelse(Cuase == "낙석낙빙", "C",
ifelse(Cuase == "암벽등반", "E",
ifelse(Cuase == "저체온증", "G",
))))))))
data <- transform(data$Cause, causes = ifelse(Cause == "개인질환", "A",
ifelse(Cuase == "산악기타", "B",
ifelse(Cuase == "낙석낙빙", "C",
ifelse(Cuase == "실족추락", "D",
ifelse(Cuase == "암벽등반", "E",
ifelse(Cuase == "일반조난", "F",
ifelse(Cuase == "저체온증", "G",
ifelse(Cuase == "탈진탈수", "H"
)))))))))
data <- transform(data$Cause, causes = ifelse(Cause == "개인질환", "A",
ifelse(Cuase == "산악기타", "B",
ifelse(Cuase == "낙석낙빙", "C",
ifelse(Cuase == "실족추락", "D",
ifelse(Cuase == "암벽등반", "E",
ifelse(Cuase == "일반조난", "F",
ifelse(Cuase == "저체온증", "G",
ifelse(Cuase == "탈진탈수", "H"
)))))))))
data <- transform(data$Cause, causes = ifelse(Cause == "개인질환", "A",
ifelse(Cause == "산악기타", "B",
ifelse(Cause == "낙석낙빙", "C",
ifelse(Cause == "실족추락", "D",
ifelse(Cause == "암벽등반", "E",
ifelse(Cause == "일반조난", "F",
ifelse(Cause == "저체온증", "G",
ifelse(Cause == "탈진탈수", "H"
)))))))))
data <- transform(data$Cause, causes = ifelse(Cause == "개인질환", "A",
ifelse(Cause == "산악기타", "B",
ifelse(Cause == "낙석낙빙", "C",
ifelse(Cause == "실족추락", "D",
ifelse(Cause == "암벽등반", "E",
ifelse(Cause == "일반조난", "F",
ifelse(Cause == "저체온증", "G",
"H"
))))))))
data <- read_excel("combine_seoul.xlsx")
head(data)
#View(data)
data <- data[, c(3,4,10:15)]
attach(data)
#fit <- lm(total.snow ~ total.temp, data=data)
#plot(fit)
#library(car)
#library(psych)
#pairs.panels(data)
#plot(total.snow ~ total.temp)
plot(total.snow ~Cause)
causes <- transform(data$Cause, cause = ifelse(Cause == "개인질환", "A",
ifelse(Cause == "산악기타", "B",
ifelse(Cause == "낙석낙빙", "C",
ifelse(Cause == "실족추락", "D",
ifelse(Cause == "암벽등반", "E",
ifelse(Cause == "일반조난", "F",
ifelse(Cause == "저체온증", "G",
"H"
))))))))
head(data)
head(causes)
data$causes <- causes
head(data)
View(data)
plot(total.snow ~Causes)
plot(total.snow ~Causes.causes)
plot(total.snow ~causes.causes)
colnames(data)
plot(total.snow ~ causes)
plot(total.snow ~ causes, data = data)
plot(causes ~ total.snow, data = data)
library(ggplot)
library(ggplot2)
data %>%ungroup() %>%  ggplot() + geom_mosaic(aes(x=product(causes),fill=snow))
install.packages("ggplot")
library(ggplot)
library(ggplot2)
library(ggplot)
install.packages("ggmosaic")
library(ggmosaic)
geom_mosaic(data = data)
ggplot(data = data) + geom_mosaic(aes(weight=frequency(snow), x=product(causes), fill = snow), data = data)
ggplot(data = data) + geom_mosaic(aes(weight=frequency(total.snow), x=product(causes), fill = total.snow), data = data)
ggplot(data = data) + geom_mosaic(aes(weight=Freq, x=product(causes), fill = total.snow), data = data)
ggplot(data = data) + geom_mosaic(aes(weight=frequency(total.snow), x=product(causes), fill = total.snow), data = data)
ggplot(data = data) + geom_mosaic(aes(weight=frequency(causes), x=product(causes), fill = total.snow), data = data)
ggplot(data = data) + geom_mosaic(aes(weight=frequency(Date), x=product(causes), fill = total.snow), data = data)
head(data(Titanic))
head(Titanic)
Titanic
ggplot(data = data) + geom_mosaic(aes(weight=frequency(Date), x=product(causes), fill = total.snow))
lengt(causes)
length(causes)
str(data)
length(causes)
data <- data[, c(1:8,10)]
data <- data[ ,c(1:8,10)]
View(data)
data <- data[.,c(1:8,10)]
View(data)
data$causes <- causes[,2]
View(data)
data <- read_excel("combine_seoul.xlsx")
head(data)
#View(data)
data <- data[, c(3,4,10:15)]
attach(data)
#fit <- lm(total.snow ~ total.temp, data=data)
#plot(fit)
#library(car)
#library(psych)
#pairs.panels(data)
#plot(total.snow ~ total.temp)
plot(total.snow ~Cause)
causes <- transform(data$Cause, cause = ifelse(Cause == "개인질환", "A",
ifelse(Cause == "산악기타", "B",
ifelse(Cause == "낙석낙빙", "C",
ifelse(Cause == "실족추락", "D",
ifelse(Cause == "암벽등반", "E",
ifelse(Cause == "일반조난", "F",
ifelse(Cause == "저체온증", "G",
"H"
))))))))
data$causes <- causes[,2]
head(data)
View(data)
ggplot(data = data) + geom_mosaic(aes(weight=frequency(Date), x=product(causes), fill = total.snow))
ggplot(data = data) + geom_mosaic(aes(weight=frequency(causes), x=product(causes), fill = total.snow))
ggplot(data = data) + geom_mosaic(aes(weight=frequency(causes), x=product(causes), fill = causes))
data <- transform(data, snow = ifelse(total.snow == 0, 0, 99))
View(data)
ggplot(data = data) + geom_mosaic(aes(weight=frequency(causes), x=product(causes), fill = causes))
ggplot(data = data) + geom_mosaic(aes(weight=frequency(causes), x=product(snow), fill = causes))
ggplot(data = data) + geom_mosaic(aes(weight=frequency(causes), x=product(snow), fill = snow))
ggplot(data = data) + geom_mosaic(aes(weight=frequency(snow), x=product(snow), fill = causes))
ggplot(data = data) + geom_mosaic(aes(weight=frequency(snow), x=product(snow), fill = snow))
ggplot(data = data) + geom_mosaic(aes(weight=frequency(causes), x=product(snow), fill = snow))
ggplot(data = data) + geom_mosaic(aes(weight=frequency(causes), x=product(snow), fill = total.snow))
ggplot(data = data) + geom_mosaic(aes(weight=frequency(causes), x=product(snow), fill = snow))
ggplot(data = data) + geom_mosaic(aes(weight=frequency(causes), x=product(snow), fill = causes))
ggplot(data = data) + geom_mosaic(aes(weight=frequency(snow), x=product(causes), fill = causes))
data <- transform(data, rain = ifelse(total.rain == 0, 0, 99))
ggplot(data = data) + geom_mosaic(aes(weight=frequency(rain), x=product(causes), fill = causes))
count(data %>% filter(total.rain != 0))
count(data %>% filter(total.rain == 0))
count(data %>% filter(total.snow != 0))
count(data %>% filter(total.snow == 0))
ggplot(data = data) + geom_mosaic(aes(weight=frequency(rain), x=product(causes), fill = causes))
ggplot(data = data) + geom_mosaic(aes(weight=frequency(snow), x=product(causes), fill = causes))
ggplot(data = data) + geom_mosaic(aes(weight=frequency(causes), x=product(snow), fill = causes))
ggplot(data = data) + geom_mosaic(aes(weight=frequency(causes), x=product(rain), fill = causes))
ggplot(data = data) + geom_mosaic(aes(weight=frequency(causes), x=product(snow), fill = causes))
ggplot(data = data) + geom_mosaic(aes(weight=frequency(causes), x=product(rain), fill = causes))
