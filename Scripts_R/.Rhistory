rm(list = ls())
par(mfrow = c(2,2))
library(readxl)
df = read_excel('C:\\R_workspace\\git\\TheZoen\\Data\\CombinedData\\comb_mini_c.xlsx',)
library(dplyr)
attach(df)
ill <- transform(df$Cause, ill = ifelse(Cause == "개인질환",'1','0'))
other <- transform(df$Cause, cause = ifelse(Cause == "산악기타",'1','0'))
rockslide <- transform(df$Cause, cause = ifelse(Cause == "낙석낙빙",'1','0'))
fall <- transform(df$Cause, cause = ifelse(Cause == "실족추락",'1','0'))
climb <- transform(df$Cause, cause = ifelse(Cause == "암벽등반",'1','0'))
dist <- transform(df$Cause, cause = ifelse(Cause == "일반조난",'1','0'))
hypothermy <- transform(df$Cause, cause = ifelse(Cause == "저체온증",'1','0'))
df$ill = ill[,2]
df$other = other[,2]
df$rockslide= rockslide[,2]
df$fall= fall[,2]
df$climb= climb[,2]
df$dist= dist[,2]
df$hypothermy  = hypothermy[,2]
class(df$other)
df = df[,-1 ]
df= na.omit(df)
sum(is.na(df))
rm(list = 'hypothermy','dist','climb', 'fall','rockslide', 'other', 'ill')
# length(which(df$other == '1'))
table(df$dist)
# df$dew_c = as.factor(df$dew_c)
# df$wind_c =as.factor(df$wind_c)
# df$temp_c = as.factor(df$temp_c)
# df$humi_c = as.factor(df$temp_c)
# df$rain_c = as.factor(df$rain_c)
# df$snow_c = as.factor(df$snow_c)
library(MASS)
colnames(df)
logistic_ill = glm(formula = fall ~ temp + wind + rain + dew + snow+ humi ,family = 'binomial' ,data = df)
logistic_ill= stepAIC(logistic_ill)
prob_ill = 1/(1+ exp(-pred_ill))
#distribution of prob
pred_ill = predict(logistic_ill)
prob_ill = 1/(1+ exp(-pred_ill))
summary(prob_ill)
plot(prob_ill)
plot(prob_ill, alpha = 0.5)
plot(prob_ill, alpha (0.5))
source('C:/R_workspace/git/TheZoen/Scripts_R/Logistic_project.R', encoding = 'UTF-8', echo=TRUE)
plot(prob_ill)
ggplot(df_g, aes(x = df_g$temp, y =ill_partial_resid_g, solid =FALSE))+
geom_point( shape =46, alpha = .4) +
geom_line(aes(x =df_g$temp, y =terms_g),color = 'red',alpha= 0.5, size = 1.5)+
labs(y = 'Partial Residual')
library(ggplot2)
#generaliaze add model
fall_logistic_gam = gam(formula = fall ~ s(temp) + s(wind) + s(humi) ,family = 'binomial' ,data = df)
summary(fall_logistic_gam)
#generaliaze add model
fall_logistic_gam = gam(formula = fall ~ s(temp) + s(wind) + s(humi) ,family = 'binomial' ,data = df)
library(mgcv)
#generaliaze add model
fall_logistic_gam = gam(formula = fall ~ s(temp) + s(wind) + s(humi) ,family = 'binomial' ,data = df)
summary(fall_logistic_gam)
fall_terms = predict(fall_logistic_gam, type ='terms'  )
summary(fall_terms)
fall_partial_resid = resid(logistic_fall) + ill_terms
summary(fall_partial_resid)
colnames(df)
colnames(fall_partial_resid)
colnames(fall_terms)
df_g = data.frame(temp_g = df[,'temp'],
terms_g = ill_terms[,"s(temp)"],
ill_partial_resid_g = ill_partial_resid[,"s(temp)"] )
fall_terms = predict(fall_logistic_gam, type ='terms'  )
summary(fall_terms)
fall_partial_resid = resid(logistic_fall) + ill_terms
source('C:/R_workspace/git/TheZoen/Scripts_R/Logistic_project.R', encoding = 'UTF-8', echo=TRUE)
source('C:/R_workspace/git/TheZoen/Scripts_R/Logistic_project.R', encoding = 'UTF-8', echo=TRUE)
summary(logistic_fall)
#distribution of prob
pred_fall = predict(logistic_fall)
prob_fall = 1/(1+ exp(-pred_fall))
summary(prob_fall)
plot(prob_fall)
library(mgcv)
#generaliaze add model
fall_logistic_gam = gam(formula = fall ~ s(temp) + s(wind) + s(humi) ,family = 'binomial' ,data = df)
summary(fall_logistic_gam)
fall_terms = predict(fall_logistic_gam, type ='terms'  )
summary(fall_terms)
fall_partial_resid = resid(logistic_fall) + fall_terms
summary(fall_partial_resid)
colnames(df)
colnames(fall_partial_resid)
colnames(fall_terms)
df_g = data.frame(temp_g = df[,'temp'],
terms_g = ill_terms[,"s(temp)"],
ill_partial_resid_g = ill_partial_resid[,"s(temp)"] )
library(ggplot2)
ggplot(df_g, aes(x = df_g$temp, y =ill_partial_resid_g, solid =FALSE))+
geom_point( shape =46, alpha = .4) +
geom_line(aes(x =df_g$temp, y =terms_g),color = 'red',alpha= 0.5, size = 1.5)+
labs(y = 'Partial Residual')
df_g = data.frame(temp_g = df[,'temp'],
terms_g = ill_terms[,"s(temp)"],
ill_partial_resid_g = ill_partial_resid[,"s(temp)"] )
df_g = data.frame(temp_g = df[,'temp'],
terms_g = fall_terms[,"s(temp)"],
fall_partial_resid_g = fall_partial_resid[,"s(temp)"] )
ggplot(df_g, aes(x = df_g$temp, y =ill_partial_resid_g, solid =FALSE))+
geom_point( shape =46, alpha = .4) +
geom_line(aes(x =df_g$temp, y =terms_g),color = 'red',alpha= 0.5, size = 1.5)+
labs(y = 'Partial Residual')
ggplot(df_g, aes(x = df_g$temp, y =fall_partial_resid_g, solid =FALSE))+
geom_point( shape =46, alpha = .4) +
geom_line(aes(x =df_g$temp, y =terms_g),color = 'red',alpha= 0.5, size = 1.5)+
labs(y = 'Partial Residual')
iplot(y =  fall , x =  wind + humi+ temp , data= df)
library(IDPmisc)
iplot(y =  fall , x =  wind + humi+ temp , data= df)
iplot(y =df$fall , x =  wind + humi+ temp , data= df)
ggplot(df_g, aes(x = df_g$temp, y =fall_partial_resid_g, solid =FALSE))+
geom_point( shape =46, alpha = .4) +
geom_line(aes(x =df_g$temp, y =terms_g),color = 'red',alpha= 0.5, size = 1.5)+
labs(y = 'Partial Residual')
par(mfrow = c(2,2))
ggplot(df_g, aes(x = df_g$temp, y =fall_partial_resid_g, solid =FALSE))+
geom_point( shape =46, alpha = .4) +
geom_line(aes(x =df_g$temp, y =terms_g),color = 'red',alpha= 0.5, size = 1.5)+
labs(y = 'Partial Residual')
plot(logistic_fall)
plot(fall_logistic_gam)
plot(prob_fall)
plot(fall_terms)
plot(fall_partial_resid)
plot(df_g)
df_g = data.frame(temp_g = df[,'temp'],
terms_g = fall_terms[,"s(temp)"],
fall_partial_resid_g = fall_partial_resid[,"s(temp)"] )
plot(df_g)
boxplot(prob_fall)
###Regression (1)
rm(list = ls())
#(normal, linear, independent, and equivariance) for and the slope is analized
head(state.x77)
class(state.x77)
states = as.data.frame(state.x77[,c('Murder', 'Population', "Illiteacy", 'Income', 'Frost')])
states = as.data.frame(state.x77[,c('Murder', 'Population', "Illiteacy", 'Income', 'Frost')])
states = as.data.frame(state.x77[,c('Murder', 'Population', "Illiteacy", 'Income', 'Frost')])
attach(state.x77)
state.x77 = state.x77
states = as.data.frame(state.x77[,c('Murder', 'Population', "Illiteacy", 'Income', 'Frost')])
#Abnormal observation, outlier(sd -1.96 < x < 1.96 out of range), High leverage( p(parameters)/ n(sample)) = (여기선)0.1 의 2~3배 커지면 outlier, influential observation(cooks D is 원의 지름크면 outlier )
influencePlot(fit, id=list(method="identify"))
rm(list = ls())
par(mfrow = c(2,2))
library(readxl)
df = read_excel('C:\\R_workspace\\git\\TheZoen\\Data\\CombinedData\\comb_mini_c.xlsx',)
library(dplyr)
attach(df)
ill <- transform(df$Cause, ill = ifelse(Cause == "개인질환",'1','0'))
other <- transform(df$Cause, cause = ifelse(Cause == "산악기타",'1','0'))
rockslide <- transform(df$Cause, cause = ifelse(Cause == "낙석낙빙",'1','0'))
fall <- transform(df$Cause, cause = ifelse(Cause == "실족추락",'1','0'))
climb <- transform(df$Cause, cause = ifelse(Cause == "암벽등반",'1','0'))
dist <- transform(df$Cause, cause = ifelse(Cause == "일반조난",'1','0'))
hypothermy <- transform(df$Cause, cause = ifelse(Cause == "저체온증",'1','0'))
df$ill = ill[,2]
df$other = other[,2]
df$rockslide= rockslide[,2]
df$fall= fall[,2]
df$climb= climb[,2]
df$dist= dist[,2]
df$hypothermy  = hypothermy[,2]
class(df$other)
df = df[,-1 ]
df= na.omit(df)
sum(is.na(df))
rm(list = 'hypothermy','dist','climb', 'fall','rockslide', 'other', 'ill')
# length(which(df$other == '1'))
table(df$dist)
# df$dew_c = as.factor(df$dew_c)
# df$wind_c =as.factor(df$wind_c)
# df$temp_c = as.factor(df$temp_c)
# df$humi_c = as.factor(df$temp_c)
# df$rain_c = as.factor(df$rain_c)
# df$snow_c = as.factor(df$snow_c)
library(MASS)
colnames(df)
logistic_fall = glm(formula = fall ~ temp + wind + rain + dew + snow+ humi ,family = 'binomial' ,data = df)
logistic_fall= stepAIC(logistic_fall)
summary(logistic_fall)
#distribution of prob
pred_fall = predict(logistic_fall)
prob_fall = 1/(1+ exp(-pred_fall))
summary(prob_fall)
boxplot(prob_fall)
library(mgcv)
#generaliaze add model
fall_logistic_gam = gam(formula = fall ~ s(temp) + s(wind) + s(humi) ,family = 'binomial' ,data = df)
summary(fall_logistic_gam)
plot(fall_logistic_gam)
fall_terms = predict(fall_logistic_gam, type ='terms'  )
summary(fall_terms)
fall_partial_resid = resid(logistic_fall) + fall_terms
summary(fall_partial_resid)
colnames(df)
colnames(fall_partial_resid)
colnames(fall_terms)
df_g = data.frame(temp_g = df[,'temp'],
terms_g = fall_terms[,"s(temp)"],
fall_partial_resid_g = fall_partial_resid[,"s(temp)"] )
library(ggplot2)
ggplot(df_g, aes(x = df_g$temp, y =fall_partial_resid_g, solid =FALSE))+
geom_point( shape =46, alpha = .4) +
geom_line(aes(x =df_g$temp, y =terms_g),color = 'red',alpha= 0.5, size = 1.5)+
labs(y = 'Partial Residual')
influencePlot(fit, id=list(method="identify"))
influencePlot(logistic_fall, id=list(method="identify"))
library(car)
sqrt(vif(logistic_fall))
influencePlot(logistic_fall, id=list(method="identify"))
